{"version":3,"sources":["axios.js","Row.js","Nav.js","requests.js","Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","backdrop_path","src","poster_path","alt","name","onClick","videoId","opts","height","width","playerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","API_KEY","fetchTrending","fetchNetflixOriginals","fetchTopRated","fecthActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backdropPosition","original_name","overview","substr","App","fetchActionMovies","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7fbc12.chunk.js","sourcesContent":["// onstruct url\nimport axios from \"axios\";\n\n/** base url to make request to the movie database */\n\nconst instance = axios.create ({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","// import React, { useState, useEffect } from 'react'\n// import axios from './axios';\n// import \"./Row.css\";\n// import YouTube from \"react-youtube\";\n// // import movieTrailer from \"movie-trailer\";\n\n// const base_url = \"https:/image.tmdb.org/t/p/original/\";\n\n// function Row({title, fetchURL, isLargeRow}) {\n//     const [movies, setMovies] = useState([]);\n//     const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n//     //snippet of code which runs based on a specific condition/variable\n//     useEffect (() => {\n//         // if [], run once when the row loads, and dont run again.\n//         // we have to make asynchronous call.\n//         async function fetchData() {\n//             const request = await axios.get(fetchURL);\n//             //\"https://api.themoviedb.org/3/\n//             setMovies(request.data.results);\n//             return request;\n//         }\n//         fetchData();\n//     }, [fetchURL]);\n\n//     const opts = {\n//         height: \"390\",\n//         width: \"100%\",\n//         playerVars: {\n//             autoplay: 1,\n//         },\n//     };\n\n//     // const handleClick = async(movie) => {\n//     //     if (trailerUrl) {\n//     //         setTrailerUrl(\"\");\n//     //     }else {\n//     //         movieTrailer(movie?.name || \"\")\n//     //         .then((url) => {\n//     //             const urlParams = new URLSearchParams(new URL(url).search);\n//     //             setTrailerUrl(urlParams.get(\"v\"));\n//     //         })\n//     //         .catch((error) => console.log(error));\n//     //     }\n//     // }; \n\n//     const handleClick = async (movie) => {\n//         if (trailerUrl) {\n//           setTrailerUrl(\"\");\n//         } else {\n//           let trailerurl = await axios.get(\n//             `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n//           );\n//           setTrailerUrl(trailerurl.data.results[0]?.key);\n//         }\n//       };\n\n//     return (\n//         <div className=\"row\">\n//             <h2>{title}</h2>\n            \n//             <div className=\"row__posters\">\n                \n//                 {movies.map(movie => (\n//                     <img \n//                     key={movie.id}\n//                         className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n//                         src={`${base_url}${\n//                             isLargeRow ? movie.poster_path : movie.backdrop_path \n//                         }`} \n//                         alr={movie.name}\n//                         // key={movie.id}\n//                         onClick={() => handleClick(movie)}\n//                     />\n//                 ))}\n//             </div>\n//             <YouTube videoId={trailerUrl} opts={opts} />\n//             {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//         </div>\n//     )\n// }\n\n// export default Row\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\n\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  // Options for react-youtube\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      setTrailerUrl(trailerurl.data.results[0]?.key);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row_posters\">\n        {movies.map(\n          (movie) =>\n            movie.backdrop_path !== null && (\n              <img\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                src={`${baseImgUrl}${\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\n                }`}\n                alt={movie.name}\n                key={movie.id}\n                onClick={() => handleClick(movie)}\n              />\n            )\n        )}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","// import React, { useEffect, useState } from 'react'\n// import \"./Nav.css\"\n\n// function Nav() {\n//     const [show, handleShow] = useState(false);\n//     useEffect(() => {\n//       window.addEventListener(\"scroll\", () => {\n//         if (window.scrollY > 100) {\n//           handleShow(true);\n//         } else {\n//           handleShow(false);\n//         }\n//       });\n//       return () => {\n//         window.removeEventListener(\"scroll\");\n//       };\n//     }, []);\n\n//     return (\n//         <div className=\"nav\">\n//             <img\n//         className=\"nav_logo\"\n//         src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n//         alt=\"Netflix Logo\"\n//       />\n//       <img\n//         className=\"nav_avatar\"\n//         src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n//         alt=\"Avatar\"\n//       />\n\n//         </div>\n//     )\n// }\n\n// export default Nav\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else {\n        handleShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav_avatar\"\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n        alt=\"Avatar\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","const API_KEY=\"28f0cc330ceb6ad4071456d1d98a51f3\";\n\nexport default {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fecthActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\n","// import React, { useState, useEffect } from 'react'\n// import axios from './axios';\n// import requests from './requests';\n// import \"./Banner.css\";\n\n// function Banner() {\n//     const [movie, setMovie] = useState([]);\n\n// // this snipet of code will pic random picture and show on banner\n//     useEffect(() => {\n//         async function fetchData() {\n//             const request = await axios.get(requests.fetchNetflixOriginals);\n//             setMovie(\n//                 request.data.results[\n//                     Math.floor(Math.random() * request.data.results.length - 1)\n//                 ]\n//             );\n//             return request;\n//         }\n//         fetchData();\n//     }, []);\n\n//     function truncate (str, n) {\n//         return str?.lenght > n ? str.substr(0, n - 1) + \"...\" : str;\n//     }\n\n//     return (\n//         <header className=\"banner\" \n//             style={{\n//                 backgroundSize:\"cover\",\n//                 backgroungImage: `url(\n//                     \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\n//                 )`,\n//                 backgroundPosition: \"center center\",\n//             }}\n//         >\n//             <div className=\"banner__contents\">\n//             <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n//             <div className=\"banner__buttons\">\n//                 <button className=\"banner_button\">Play</button>\n//                 <button className=\"banner_button\">My List</button>\n//             </div>\n//             <h1 className=\"banner_description\">{truncate(movie?.overview, 200)}</h1>\n//        </div>\n//        <div className=\"banner_fadeBottom\" />\n//      </header>\n//     )\n// }\n\n// export default Banner\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\n        backdropPosition: \"center center\",\n      }}\n    >\n      {/* Background image */}\n      <div className=\"banner_contents\">\n        {/* title */}\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n\n        {/* 2 buttons */}\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List </button>\n        </div>\n\n        {/* description */}\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 200)}</h1>\n      </div>\n      <div className=\"banner_fadeBottom\" />\n    </header>\n  );\n}\n\nexport default Banner","// import React from 'react';\n// import './App.css';\n// import Row from './Row';\n// import requests from \"./requests\";\n// import Banner from \"./Banner\";\n// import Nav from \"./Nav\";\n\n// function App() {\n//   return (\n//     <div className=\"app\">\n//       <nav ></nav>\n//       {/* Nav */}\n//       <Banner />\n\n//       <Row \n//         title=\"NETFLIX ORIGINALS\" \n//         fetchURL={requests.fetchNetflixOriginals}\n//         isLargeRow\n//       />\n//       <Row title=\"Trending Now\" fetchURL={requests.fetchTrending}/>\n//       <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated}/>\n//       <Row title=\"Action Movies\" fetchURL={requests.fecthActionMovies}/>\n//       <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies}/>\n//       <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies}/>\n//       <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies}/>\n//       <Row title=\"Document Movies\" fetchURL={requests.fetchDocumentaries}/>\n      \n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport Nav from \"./Nav\";\nimport Banner from \"./Banner\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Navbar */}\n      <Nav />\n\n      {/* Banner */}\n      <Banner />\n\n      {/* Rows */}\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}